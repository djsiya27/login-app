{"version":3,"sources":["assets/pic1.jpg","assets/pic2.jpg","assets/pic3.jpg","component/login.jsx","component/signup.jsx","component/dashboard.jsx","component/cards.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","emailRegex","RegExp","formValid","_ref","formErrors","rest","Object","objectWithoutProperties","valid","values","forEach","val","length","Login","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","history","push","preventDefault","state","console","log","concat","name","email","phone","password","error","handleChange","_e$target","target","value","test","setState","defineProperty","react_default","a","createElement","Form","onSubmit","className","noValidate","FormGroup","Label","htmlFor","Input","type","id","placeholder","onChange","Button","dist","react_router_dom","exact","to","Component","withRouter","signup","Dashboard","src","imgsrc","alt","title","href","cards","dashboard","img1","img2","img3","App","react_router","path","component","login","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee0d72e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pic1.c61e7d3a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic2.7b0ab1cc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic3.b4911562.jpg\";","import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { BrowserRouter as  NavLink, Link } from 'react-router-dom';\r\n\r\nimport { FacebookLoginButton } from 'react-social-login-buttons';\r\n\r\nimport { withRouter } from 'react-router'\r\n\r\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9]+)*$/);\r\n\r\nconst formValid = ({formErrors, ...rest }) => {\r\n    let valid = true;\r\n\r\n    // validate form errors being empty\r\n    Object.values(formErrors).forEach( val => {\r\n    val.length > 0 && (valid = false);\r\n });\r\n\r\n // validate the form was filled out\r\n Object.values(rest).forEach(val => {\r\n     val === null && (valid = false);\r\n });\r\n    return valid;\r\n};\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: null,\r\n            email: null,\r\n            password: null,\r\n            phone: null,\r\n            formErrors: {\r\n                name: \"\",\r\n                email: \"\",\r\n                phone: \"\",\r\n                password: \"\"\r\n            }\r\n        };\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        this.props.history.push('/cards');\r\n        e.preventDefault();\r\n\r\n        \r\n\r\n        if(formValid(this.state)) {\r\n            console.log(`\r\n            --SUBMITTING--\r\n            Name: ${this.state.name}\r\n            Email: ${this.state.email}\r\n            Phone: ${this.state.phone}\r\n            Password: ${this.state.password}\r\n            `);\r\n\r\n            \r\n        } else {\r\n            console.error(\"Form Invalid - display error message\")\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    handleChange = e => {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        let formErrors = this.state.formErrors;\r\n\r\n        \r\n\r\n        switch (name) {\r\n            case 'name':\r\n                formErrors.name =\r\n                 value.length < 3 \r\n                 ? \"minimum 3 characters required\"\r\n                  : \"\";\r\n            break;\r\n            case 'email':\r\n                formErrors.email = \r\n                emailRegex.test(value)  \r\n                 ? \"\"\r\n                  : \"Invalid email address\";\r\n            break;\r\n            case 'phone':\r\n                formErrors.phone =\r\n                value.length < 10 \r\n                 ? \"minimum 10 characters\"\r\n                  : \"\";\r\n            break;\r\n            case 'password':\r\n                formErrors.password =\r\n                value.length < 6 \r\n                 ? \"minimum 3 characters required\"\r\n                  : \"\";\r\n            break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({formErrors, [name]: value }, () => console.log(this.state));\r\n    };\r\n\r\n\r\n    state = {  }\r\n    render() { \r\n      const { formErrors } = this.state;\r\n        return ( \r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\" noValidate>\r\n               <h1 className=\"text-center\">\r\n               <span className=\"font-weight-bold\">Login Form</span>\r\n               </h1>\r\n               <h2 className=\"text-center\">Welcome</h2>\r\n               <FormGroup>\r\n               <Label htmlFor=\"name\">Name</Label>\r\n                 <Input type=\"text\" name=\"name\" className={formErrors.name.length > 0 ? \"error\" : null} id=\"name\" placeholder=\"Name\" noValidate onChange={this.handleChange} />\r\n                 {formErrors.name.length > 0 && (\r\n                     <span className=\"errorMessage\">{formErrors.name}</span>\r\n                 )}\r\n             </FormGroup>\r\n             <FormGroup>\r\n               <Label htmlFor=\"email\">Email</Label>\r\n                 <Input type=\"email\" name=\"email\" className={formErrors.email.length > 0 ? \"error\" : null} id=\"email\" placeholder=\"Email\" noValidate onChange={this.handleChange}/>\r\n                 {formErrors.email.length > 0 && (\r\n                     <span className=\"errorMessage\">{formErrors.email}</span>\r\n                 )}\r\n             </FormGroup>\r\n             <FormGroup>\r\n               <Label htmlFor=\"phone\">Phone</Label>\r\n                 <Input type=\"phone\" name=\"phone\" className={formErrors.phone.length > 0 ? \"error\" : null} id=\"phone\" placeholder=\"Phone\" noValidate onChange={this.handleChange}/>\r\n                 {formErrors.phone.length > 0 && (\r\n                     <span className=\"errorMessage\">{formErrors.phone}</span>\r\n                 )}\r\n             </FormGroup>\r\n             <FormGroup>\r\n               <Label htmlFor=\"password\">Password</Label>\r\n                 <Input type=\"password\" name=\"password\" className={formErrors.password.length > 0 ? \"error\" : null} placeholder=\"Password\" noValidate onChange={this.handleChange}/>\r\n                 {formErrors.password.length > 0 && (\r\n                     <span className=\"errorMessage\">{formErrors.password}</span>\r\n                 )}\r\n             </FormGroup>\r\n             <Button type=\"submit\" className=\"btn-lg btn-dark btn-block\">\r\n             Login \r\n             </Button>\r\n               <div className=\"text-center pt-3\">\r\n               Or continue with your social account\r\n               </div>\r\n               <FacebookLoginButton className=\"mt-3 mb-3\" />\r\n               <div className=\"text-center\">\r\n                  <Link exact to=\"/\">Sign up</Link>\r\n                  <span className=\"p-2\">|</span>\r\n                  <NavLink to=\"/forgot-password\">Forgot Password</NavLink>\r\n               </div>\r\n           </Form>\r\n         );\r\n    }\r\n}\r\n \r\nexport default withRouter (Login);\r\n","import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nimport { withRouter } from 'react-router'\r\n\r\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9]+)*$/);\r\n\r\nconst formValid = ({formErrors, ...rest }) => {\r\n    let valid = true;\r\n\r\n    // validate form errors being empty\r\n    Object.values(formErrors).forEach( val => {\r\n    val.length > 0 && (valid = false);\r\n });\r\n\r\n // validate the form was filled out\r\n Object.values(rest).forEach(val => {\r\n     val === null && (valid = false);\r\n });\r\n    return valid;\r\n};\r\nclass signup extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: null,\r\n            email: null,\r\n            password: null,\r\n            phone: null,\r\n            formErrors: {\r\n                name: \"\",\r\n                email: \"\",\r\n                phone: \"\",\r\n                password: \"\"\r\n            }\r\n        };\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        this.props.history.push('/login');\r\n        e.preventDefault();\r\n\r\n        \r\n\r\n        if(formValid(this.state)) {\r\n            console.log(`\r\n            --SUBMITTING--\r\n            Name: ${this.state.name}\r\n            Email: ${this.state.email}\r\n            Phone: ${this.state.phone}\r\n            Password: ${this.state.password}\r\n            `);\r\n\r\n            \r\n        } else {\r\n            console.error(\"Form Invalid - display error message\")\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    handleChange = e => {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        let formErrors = this.state.formErrors;\r\n\r\n        \r\n\r\n        switch (name) {\r\n            case 'name':\r\n                formErrors.name =\r\n                 value.length < 3 \r\n                 ? \"minimum 3 characters required\"\r\n                  : \"\";\r\n            break;\r\n            case 'email':\r\n                formErrors.email = \r\n                emailRegex.test(value)  \r\n                 ? \"\"\r\n                  : \"Invalid email address\";\r\n            break;\r\n            case 'phone':\r\n                formErrors.phone =\r\n                value.length < 10 \r\n                 ? \"minimum 10 characters\"\r\n                  : \"\";\r\n            break;\r\n            case 'password':\r\n                formErrors.password =\r\n                value.length < 6 \r\n                 ? \"minimum 3 characters required\"\r\n                  : \"\";\r\n            break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({formErrors, [name]: value }, () => console.log(this.state));\r\n    };\r\n\r\n\r\n    render() { \r\n        \r\n        const { formErrors } = this.state;\r\n        return ( \r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\"  noValidate >\r\n            <h1 className=\"text-center\">\r\n            <span className=\"font-weight-bold\">Sign Up Form</span>\r\n            </h1>\r\n            <h2 className=\"text-center\">Welcome</h2>\r\n            <FormGroup>\r\n              <Label htmlFor=\"name\">Name</Label>\r\n                <Input type=\"text\" name=\"name\" className={formErrors.name.length > 0 ? \"error\" : null} id=\"name\" placeholder=\"Name\" noValidate onChange={this.handleChange} />\r\n                {formErrors.name.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.name}</span>\r\n                )}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label htmlFor=\"email\">Email</Label>\r\n                <Input type=\"email\" name=\"email\" className={formErrors.email.length > 0 ? \"error\" : null} id=\"email\" placeholder=\"Email\" noValidate onChange={this.handleChange}/>\r\n                {formErrors.email.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.email}</span>\r\n                )}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label htmlFor=\"phone\">Phone</Label>\r\n                <Input type=\"phone\" name=\"phone\" className={formErrors.phone.length > 0 ? \"error\" : null} id=\"phone\" placeholder=\"Phone\" noValidate onChange={this.handleChange}/>\r\n                {formErrors.phone.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.phone}</span>\r\n                )}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label htmlFor=\"password\">Password</Label>\r\n                <Input type=\"password\" name=\"password\" className={formErrors.password.length > 0 ? \"error\" : null} placeholder=\"Password\" noValidate onChange={this.handleChange}/>\r\n                {formErrors.password.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.password}</span>\r\n                )}\r\n            </FormGroup>\r\n            <Button type=\"submit\" className=\"btn-lg btn-dark btn-block\">\r\n            Sign Up \r\n            </Button>\r\n          \r\n            </Form>\r\n         );\r\n    }\r\n}\r\n \r\nexport default withRouter (signup);","import React, { Component } from 'react';\r\n\r\n\r\n\r\nimport \"./card-style.css\";\r\n\r\nconst Dashboard = props =>  {\r\n    \r\n   \r\n        return ( \r\n            \r\n                <div className=\"card text-center shadow\">\r\n                    <div className=\"overflow\">\r\n                        <img src={props.imgsrc} alt=\"image\" className=\"card-img-top\" />\r\n                    </div>\r\n                    <div className=\"card-body text-dark\">\r\n                    <h4 className=\"card-title\">{props.title}</h4>\r\n                    <p className=\"card-text text-secondary\">\r\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Perferendis ducimus nam quae ratione dicta sed saepe obcaecati illum debitis quasi.\r\n                    </p>\r\n                    <a href=\"#\" className=\"btn btn-outline-success\">Go Anywhere</a>\r\n                    </div>\r\n                </div>\r\n            \r\n         );\r\n    }\r\n\r\n \r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport Dashboard from './dashboard';\r\n\r\nimport img1 from '../assets/pic1.jpg';\r\nimport img2 from '../assets/pic2.jpg';\r\nimport img3 from '../assets/pic3.jpg';\r\n\r\nclass cards extends Component {\r\n   \r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid d-flex justify-content-center\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                    <Dashboard imgsrc={img1} title=\"Skyline\"/>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                    <Dashboard imgsrc={img2} title=\"Downtown\"/>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                    <Dashboard imgsrc={img3} title=\"Workplace\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default cards;","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport login from './component/login';\r\nimport signup from './component/signup';\r\nimport dashboard from './component/dashboard';\r\nimport cards from './component/cards';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <Route exact path=\"/\" component={signup}>\r\n      \r\n    </Route>\r\n\r\n    <Route exact path=\"/login\" component={login}>\r\n      \r\n    </Route>\r\n\r\n    <Route exact path=\"/dashboard\" component={dashboard}>\r\n      \r\n    </Route>\r\n\r\n    <Route exact path=\"/cards\" component={cards}>\r\n      \r\n    </Route>\r\n\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}